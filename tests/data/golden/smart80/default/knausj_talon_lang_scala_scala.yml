input:
  doc:
    docs:
    - cells:
      - docs:
        - text: tag
        - text: ':'
      - text: user.scala
      info:
        hpad:
          text: ' '
        hsep:
          text: ' '
        min_col_widths: []
        table_type: match
    - text: '-'
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_imperative
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_object_oriented
    - text: '

        '
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_comment_line
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_comment_block_c_like
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_data_bool
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_data_null
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_functions
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_libraries
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_operators_array
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_operators_assignment
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_operators_bitwise
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_operators_lambda
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_operators_math
    - text: '

        '
    - text: '

        '
    - text: 'settings():'
    - doc:
        docs:
        - text: '

            '
        - text: user.code_private_function_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_protected_function_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_public_function_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_private_variable_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_protected_variable_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_public_variable_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
      indent: 4
      overlap: false
    - text: '

        '
    - alts:
      - docs:
        - text: state
        - text: ' '
        - text: '{'
        - text: user.scala_modifier
        - text: '}'
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - text: insert
            - text: (
            - doc:
                docs:
                - text: '{'
                - text: user.scala_modifier
                - text: '}'
                - text: ' '
              function: _smart_quote
            - text: )
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: state
          - text: ' '
          - text: '{'
          - text: user.scala_modifier
          - text: '}'
          - text: ':'
        - doc:
            docs:
            - text: insert
            - text: (
            - doc:
                docs:
                - text: '{'
                - text: user.scala_modifier
                - text: '}'
                - text: ' '
              function: _smart_quote
            - text: )
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - text: '

        '
    - alts:
      - docs:
        - text: state
        - text: ' '
        - text: '{'
        - text: user.scala_keyword
        - text: '}'
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - text: insert
            - text: (
            - doc:
                docs:
                - text: '{'
                - text: scala_keyword
                - text: '}'
                - text: ' '
              function: _smart_quote
            - text: )
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: state
          - text: ' '
          - text: '{'
          - text: user.scala_keyword
          - text: '}'
          - text: ':'
        - doc:
            docs:
            - text: insert
            - text: (
            - doc:
                docs:
                - text: '{'
                - text: scala_keyword
                - text: '}'
                - text: ' '
              function: _smart_quote
            - text: )
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - text: '

        '
    - alts:
      - docs:
        - text: op
        - text: ' '
        - text: right
        - text: ' '
        - text: arrow
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: ' '
                - text: ->
                - text: ' '
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: op
          - text: ' '
          - text: right
          - text: ' '
          - text: arrow
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: ' '
                - text: ->
                - text: ' '
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - alts:
      - docs:
        - text: op
        - text: ' '
        - text: left
        - text: ' '
        - text: arrow
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: ' '
                - text: <-
                - text: ' '
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: op
          - text: ' '
          - text: left
          - text: ' '
          - text: arrow
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: ' '
                - text: <-
                - text: ' '
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - alts:
      - docs:
        - text: op
        - text: ' '
        - text: plus
        - text: ' '
        - text: plus
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: ' '
                - text: ++
                - text: ' '
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: op
          - text: ' '
          - text: plus
          - text: ' '
          - text: plus
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: ' '
                - text: ++
                - text: ' '
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - alts:
      - docs:
        - text: op
        - text: ' '
        - text: subtype
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: ' '
                - text: '<:'
                - text: ' '
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: op
          - text: ' '
          - text: subtype
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: ' '
                - text: '<:'
                - text: ' '
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - text: '

        '
    - alts:
      - docs:
        - text: state
        - text: ' '
        - text: match
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - text: user.code_state_switch
            - text: (
            - text: )
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: state
          - text: ' '
          - text: match
          - text: ':'
        - doc:
            docs:
            - text: user.code_state_switch
            - text: (
            - text: )
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - text: '

        '
    - text: block
    - text: ' '
    - text: string
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            text: '""""""'
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: '"left'
        - text: ' '
        - text: left
        - text: ' '
        - text: left"
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
  max_line_width: 80
  renderer: smart
  simple_layout: null
output: |
  tag: user.scala
  -
  tag(): user.code_imperative
  tag(): user.code_object_oriented

  tag(): user.code_comment_line
  tag(): user.code_comment_block_c_like
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_functions
  tag(): user.code_libraries
  tag(): user.code_operators_array
  tag(): user.code_operators_assignment
  tag(): user.code_operators_bitwise
  tag(): user.code_operators_lambda
  tag(): user.code_operators_math

  settings():
      user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"

  state {user.scala_modifier}: insert("{user.scala_modifier} ")

  state {user.scala_keyword}: insert("{scala_keyword} ")

  op right arrow: " -> "
  op left arrow: " <- "
  op plus plus: " ++ "
  op subtype: " <: "

  state match: user.code_state_switch()

  block string:
      insert('""""""')
      key("left left left")
