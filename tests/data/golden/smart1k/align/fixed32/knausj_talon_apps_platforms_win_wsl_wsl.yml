input:
  doc:
    docs:
    - text: '#'
      type: Text
    - type: Space
    - text: 'NOTE:'
      type: Text
    - type: Space
    - text: to
      type: Text
    - type: Space
    - text: use
      type: Text
    - type: Space
    - text: these
      type: Text
    - type: Space
    - text: commands
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: will
      type: Text
    - type: Space
    - text: need
      type: Text
    - type: Space
    - text: to
      type: Text
    - type: Space
    - text: activate
      type: Text
    - type: Space
    - text: the
      type: Text
    - type: Space
    - text: tag
      type: Text
    - type: Space
    - text: below
      type: Text
    - type: Space
    - text: in
      type: Text
    - type: Space
    - text: whatever
      type: Text
    - type: Space
    - text: contexts
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: choose.
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: do
      type: Text
    - type: Space
    - text: this
      type: Text
    - type: Space
    - text: in
      type: Text
    - type: Space
    - text: a
      type: Text
    - type: Space
    - text: separate
      type: Text
    - type: Space
    - text: .talon
      type: Text
    - type: Space
    - text: file
      type: Text
    - type: Space
    - text: or
      type: Text
    - type: Space
    - text: via
      type: Text
    - type: Space
    - text: python.
      type: Text
    - type: Space
    - text: for
      type: Text
    - type: Space
    - text: example,
      type: Text
    - type: Space
    - text: if
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: use
      type: Text
    - type: Space
    - text: windows
      type: Text
    - type: Space
    - text: terminal
      type: Text
    - type: Space
    - text: for
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: wsl
      type: Text
    - type: Space
    - text: then
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: might
      type: Text
    - type: Space
    - text: do
      type: Text
    - type: Space
    - text: 'this:'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: 'os:'
      type: Text
    - type: Space
    - text: windows
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: 'app:'
      type: Text
    - type: Space
    - text: windows_terminal
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: '-'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: 'tag():'
      type: Text
    - type: Space
    - text: user.wsl
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: however,
      type: Text
    - type: Space
    - text: if
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: also
      type: Text
    - type: Space
    - text: use
      type: Text
    - type: Space
    - text: windows
      type: Text
    - type: Space
    - text: terminal
      type: Text
    - type: Space
    - text: for
      type: Text
    - type: Space
    - text: other
      type: Text
    - type: Space
    - text: things
      type: Text
    - type: Space
    - text: (powershell),
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: will
      type: Text
    - type: Space
    - text: want
      type: Text
    - type: Space
    - text: something
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: more
      type: Text
    - type: Space
    - text: specific...like
      type: Text
    - type: Space
    - text: 'this:'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: 'os:'
      type: Text
    - type: Space
    - text: windows
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: 'app:'
      type: Text
    - type: Space
    - text: windows_terminal
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: 'title:'
      type: Text
    - type: Space
    - text: /^WSL:/
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: '-'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: 'tag():'
      type: Text
    - type: Space
    - text: user.wsl
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: then,
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: will
      type: Text
    - type: Space
    - text: need
      type: Text
    - type: Space
    - text: to
      type: Text
    - type: Space
    - text: find
      type: Text
    - type: Space
    - text: a
      type: Text
    - type: Space
    - text: way
      type: Text
    - type: Space
    - text: to
      type: Text
    - type: Space
    - text: set
      type: Text
    - type: Space
    - text: the
      type: Text
    - type: Space
    - text: window
      type: Text
    - type: Space
    - text: title
      type: Text
    - type: Space
    - text: accordingly.
      type: Text
    - type: Space
    - text: for
      type: Text
    - type: Space
    - text: example,
      type: Text
    - type: Space
    - text: to
      type: Text
    - type: Space
    - text: match
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: the
      type: Text
    - type: Space
    - text: title
      type: Text
    - type: Space
    - text: pattern
      type: Text
    - type: Space
    - text: above,
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: can
      type: Text
    - type: Space
    - text: set
      type: Text
    - type: Space
    - text: the
      type: Text
    - type: Space
    - text: prompt
      type: Text
    - type: Space
    - text: in
      type: Text
    - type: Space
    - text: your
      type: Text
    - type: Space
    - text: .bashrc
      type: Text
    - type: Space
    - text: file
      type: Text
    - type: Space
    - text: like
      type: Text
    - type: Space
    - text: 'this:'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - type: Space
    - type: Space
    - type: Space
    - text: PS1="\[\e]0;${debian_chroot:+($debian_chroot)}WSL:${WSL_DISTRO_NAME}
      type: Text
    - type: Space
    - text: '\u@\h:'
      type: Text
    - type: Space
    - text: \w\a\]$PS1"
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: 'ALSO:'
      type: Text
    - type: Space
    - text: if
      type: Text
    - type: Space
    - text: you
      type: Text
    - type: Space
    - text: do
      type: Text
    - type: Space
    - text: populate
      type: Text
    - type: Space
    - text: your
      type: Text
    - type: Space
    - text: window
      type: Text
    - type: Space
    - text: title
      type: Text
    - type: Space
    - text: with
      type: Text
    - type: Space
    - text: your
      type: Text
    - type: Space
    - text: distro
      type: Text
    - type: Space
    - text: name,
      type: Text
    - type: Space
    - text: make
      type: Text
    - type: Space
    - text: sure
      type: Text
    - type: Space
    - text: the
      type: Text
    - type: Space
    - text: '''wsl_title_regex'''
      type: Text
    - type: Line
    - text: '#'
      type: Text
    - type: Space
    - text: value
      type: Text
    - type: Space
    - text: in
      type: Text
    - type: Space
    - text: wsl.py
      type: Text
    - type: Space
    - text: is
      type: Text
    - type: Space
    - text: set
      type: Text
    - type: Space
    - text: accordingly.
      type: Text
    - type: Line
    - cells:
      - docs:
        - text: tag
          type: Text
        - text: ':'
          type: Text
        type: Cat
      - text: user.wsl
        type: Text
      info:
        hpad:
          text: ' '
        hsep:
          text: ' '
        min_col_widths:
        - 32
        table_type: match
      type: Row
    - text: '-'
      type: Text
    - type: Line
    - text: 'tag():'
      type: Text
    - type: Space
    - text: terminal
      type: Text
    - type: Line
    - text: 'tag():'
      type: Text
    - type: Space
    - text: user.file_manager
      type: Text
    - type: Line
    - text: 'tag():'
      type: Text
    - type: Space
    - text: user.generic_unix_shell
      type: Text
    - type: Line
    - text: 'tag():'
      type: Text
    - type: Space
    - text: user.git
      type: Text
    - type: Line
    - text: 'tag():'
      type: Text
    - type: Space
    - text: user.kubectl
      type: Text
    - type: Line
    - type: Line
    - alts:
      - docs:
        - text: ^
          type: Text
        - text: go
          type: Text
        - type: Space
        - text: <
          type: Text
        - text: user.letter
          type: Text
        - text: '>'
          type: Text
        - text: $
          type: Text
        - text: ':'
          type: Text
        - doc:
            docs:
            - type: Line
            - text: user.file_manager_open_volume
              type: Text
            - text: (
              type: Text
            - doc:
                docs:
                - text: /mnt/
                  type: Text
                - text: '{'
                  type: Text
                - text: letter
                  type: Text
                - text: '}'
                  type: Text
                type: Cat
              function: _smart_quote
              type: Edit
            - text: )
              type: Text
            - type: Line
            type: Cat
          indent: 4
          overlap: false
          type: Nest
        type: Cat
      - cells:
        - docs:
          - text: ^
            type: Text
          - text: go
            type: Text
          - type: Space
          - text: <
            type: Text
          - text: user.letter
            type: Text
          - text: '>'
            type: Text
          - text: $
            type: Text
          - text: ':'
            type: Text
          type: Cat
        - doc:
            docs:
            - text: user.file_manager_open_volume
              type: Text
            - text: (
              type: Text
            - doc:
                docs:
                - text: /mnt/
                  type: Text
                - text: '{'
                  type: Text
                - text: letter
                  type: Text
                - text: '}'
                  type: Text
                type: Cat
              function: _smart_quote
              type: Edit
            - text: )
              type: Text
            - type: Line
            type: Cat
          function: _inline
          type: Edit
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths:
          - 32
          table_type: command
        type: Row
      type: Alt
    - type: Line
    - alts:
      - docs:
        - text: (
          type: Text
        - text: wsl
          type: Text
        - type: Space
        - text: '|'
          type: Text
        - type: Space
        - text: weasel
          type: Text
        - text: )
          type: Text
        - type: Space
        - text: reset
          type: Text
        - type: Space
        - text: path
          type: Text
        - type: Space
        - text: detection
          type: Text
        - text: ':'
          type: Text
        - doc:
            docs:
            - type: Line
            - text: user.wsl_reset_path_detection
              type: Text
            - text: (
              type: Text
            - text: )
              type: Text
            - type: Line
            type: Cat
          indent: 4
          overlap: false
          type: Nest
        type: Cat
      - cells:
        - docs:
          - text: (
            type: Text
          - text: wsl
            type: Text
          - type: Space
          - text: '|'
            type: Text
          - type: Space
          - text: weasel
            type: Text
          - text: )
            type: Text
          - type: Space
          - text: reset
            type: Text
          - type: Space
          - text: path
            type: Text
          - type: Space
          - text: detection
            type: Text
          - text: ':'
            type: Text
          type: Cat
        - doc:
            docs:
            - text: user.wsl_reset_path_detection
              type: Text
            - text: (
              type: Text
            - text: )
              type: Text
            - type: Line
            type: Cat
          function: _inline
          type: Edit
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths:
          - 32
          table_type: command
        type: Row
      type: Alt
    - alts:
      - docs:
        - text: (
          type: Text
        - text: wsl
          type: Text
        - type: Space
        - text: '|'
          type: Text
        - type: Space
        - text: weasel
          type: Text
        - text: )
          type: Text
        - type: Space
        - text: speak
          type: Text
        - text: ':'
          type: Text
        - doc:
            docs:
            - type: Line
            - text: user.wsl_speak
              type: Text
            - text: (
              type: Text
            - text: )
              type: Text
            - type: Line
            type: Cat
          indent: 4
          overlap: false
          type: Nest
        type: Cat
      - cells:
        - docs:
          - text: (
            type: Text
          - text: wsl
            type: Text
          - type: Space
          - text: '|'
            type: Text
          - type: Space
          - text: weasel
            type: Text
          - text: )
            type: Text
          - type: Space
          - text: speak
            type: Text
          - text: ':'
            type: Text
          type: Cat
        - doc:
            docs:
            - text: user.wsl_speak
              type: Text
            - text: (
              type: Text
            - text: )
              type: Text
            - type: Line
            type: Cat
          function: _inline
          type: Edit
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths:
          - 32
          table_type: command
        type: Row
      type: Alt
    type: Cat
  max_line_width: 1000
  renderer: smart
  simple_layout: null
output: '# NOTE: to use these commands you will need to activate the tag below in
  whatever contexts you

  # choose.

  #

  # do this in a separate .talon file or via python. for example, if you use windows
  terminal for

  # wsl then you might do this:

  #

  #    os: windows

  #    app: windows_terminal

  #    -

  #    tag(): user.wsl

  #

  # however, if you also use windows terminal for other things (powershell), you will
  want something

  # more specific...like this:

  #

  #    os: windows

  #    app: windows_terminal

  #    title: /^WSL:/

  #    -

  #    tag(): user.wsl

  #

  # then, you will need to find a way to set the window title accordingly. for example,
  to match

  # the title pattern above, you can set the prompt in your .bashrc file like this:

  #

  #    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}WSL:${WSL_DISTRO_NAME} \u@\h:
  \w\a\]$PS1"

  #

  # ALSO: if you do populate your window title with your distro name, make sure the
  ''wsl_title_regex''

  # value in wsl.py is set accordingly.

  tag:                             user.wsl

  -

  tag(): terminal

  tag(): user.file_manager

  tag(): user.generic_unix_shell

  tag(): user.git

  tag(): user.kubectl


  ^go <user.letter>$:              user.file_manager_open_volume("/mnt/{letter}")


  (wsl | weasel) reset path detection: user.wsl_reset_path_detection()

  (wsl | weasel) speak:            user.wsl_speak()

  '
