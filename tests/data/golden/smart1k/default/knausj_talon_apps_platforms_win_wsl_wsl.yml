input:
  doc:
    docs:
    - text: '#'
    - text: ' '
    - text: 'NOTE:'
    - text: ' '
    - text: to
    - text: ' '
    - text: use
    - text: ' '
    - text: these
    - text: ' '
    - text: commands
    - text: ' '
    - text: you
    - text: ' '
    - text: will
    - text: ' '
    - text: need
    - text: ' '
    - text: to
    - text: ' '
    - text: activate
    - text: ' '
    - text: the
    - text: ' '
    - text: tag
    - text: ' '
    - text: below
    - text: ' '
    - text: in
    - text: ' '
    - text: whatever
    - text: ' '
    - text: contexts
    - text: ' '
    - text: you
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: choose.
    - text: '

        '
    - text: '#'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: do
    - text: ' '
    - text: this
    - text: ' '
    - text: in
    - text: ' '
    - text: a
    - text: ' '
    - text: separate
    - text: ' '
    - text: .talon
    - text: ' '
    - text: file
    - text: ' '
    - text: or
    - text: ' '
    - text: via
    - text: ' '
    - text: python.
    - text: ' '
    - text: for
    - text: ' '
    - text: example,
    - text: ' '
    - text: if
    - text: ' '
    - text: you
    - text: ' '
    - text: use
    - text: ' '
    - text: windows
    - text: ' '
    - text: terminal
    - text: ' '
    - text: for
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: wsl
    - text: ' '
    - text: then
    - text: ' '
    - text: you
    - text: ' '
    - text: might
    - text: ' '
    - text: do
    - text: ' '
    - text: 'this:'
    - text: '

        '
    - text: '#'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: 'os:'
    - text: ' '
    - text: windows
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: 'app:'
    - text: ' '
    - text: windows_terminal
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: '-'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: 'tag():'
    - text: ' '
    - text: user.wsl
    - text: '

        '
    - text: '#'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: however,
    - text: ' '
    - text: if
    - text: ' '
    - text: you
    - text: ' '
    - text: also
    - text: ' '
    - text: use
    - text: ' '
    - text: windows
    - text: ' '
    - text: terminal
    - text: ' '
    - text: for
    - text: ' '
    - text: other
    - text: ' '
    - text: things
    - text: ' '
    - text: (powershell),
    - text: ' '
    - text: you
    - text: ' '
    - text: will
    - text: ' '
    - text: want
    - text: ' '
    - text: something
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: more
    - text: ' '
    - text: specific...like
    - text: ' '
    - text: 'this:'
    - text: '

        '
    - text: '#'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: 'os:'
    - text: ' '
    - text: windows
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: 'app:'
    - text: ' '
    - text: windows_terminal
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: 'title:'
    - text: ' '
    - text: /^WSL:/
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: '-'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: 'tag():'
    - text: ' '
    - text: user.wsl
    - text: '

        '
    - text: '#'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: then,
    - text: ' '
    - text: you
    - text: ' '
    - text: will
    - text: ' '
    - text: need
    - text: ' '
    - text: to
    - text: ' '
    - text: find
    - text: ' '
    - text: a
    - text: ' '
    - text: way
    - text: ' '
    - text: to
    - text: ' '
    - text: set
    - text: ' '
    - text: the
    - text: ' '
    - text: window
    - text: ' '
    - text: title
    - text: ' '
    - text: accordingly.
    - text: ' '
    - text: for
    - text: ' '
    - text: example,
    - text: ' '
    - text: to
    - text: ' '
    - text: match
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: the
    - text: ' '
    - text: title
    - text: ' '
    - text: pattern
    - text: ' '
    - text: above,
    - text: ' '
    - text: you
    - text: ' '
    - text: can
    - text: ' '
    - text: set
    - text: ' '
    - text: the
    - text: ' '
    - text: prompt
    - text: ' '
    - text: in
    - text: ' '
    - text: your
    - text: ' '
    - text: .bashrc
    - text: ' '
    - text: file
    - text: ' '
    - text: like
    - text: ' '
    - text: 'this:'
    - text: '

        '
    - text: '#'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: ' '
    - text: ' '
    - text: ' '
    - text: PS1="\[\e]0;${debian_chroot:+($debian_chroot)}WSL:${WSL_DISTRO_NAME}
    - text: ' '
    - text: '\u@\h:'
    - text: ' '
    - text: \w\a\]$PS1"
    - text: '

        '
    - text: '#'
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: 'ALSO:'
    - text: ' '
    - text: if
    - text: ' '
    - text: you
    - text: ' '
    - text: do
    - text: ' '
    - text: populate
    - text: ' '
    - text: your
    - text: ' '
    - text: window
    - text: ' '
    - text: title
    - text: ' '
    - text: with
    - text: ' '
    - text: your
    - text: ' '
    - text: distro
    - text: ' '
    - text: name,
    - text: ' '
    - text: make
    - text: ' '
    - text: sure
    - text: ' '
    - text: the
    - text: ' '
    - text: '''wsl_title_regex'''
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: value
    - text: ' '
    - text: in
    - text: ' '
    - text: wsl.py
    - text: ' '
    - text: is
    - text: ' '
    - text: set
    - text: ' '
    - text: accordingly.
    - text: '

        '
    - cells:
      - docs:
        - text: tag
        - text: ':'
      - text: user.wsl
      info:
        hpad:
          text: ' '
        hsep:
          text: ' '
        min_col_widths: []
        table_type: match
    - text: '-'
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: terminal
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.file_manager
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.generic_unix_shell
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.git
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.kubectl
    - text: '

        '
    - text: '

        '
    - alts:
      - docs:
        - text: ^
        - text: go
        - text: ' '
        - text: <
        - text: user.letter
        - text: '>'
        - text: $
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - text: user.file_manager_open_volume
            - text: (
            - doc:
                docs:
                - text: /mnt/
                - text: '{'
                - text: letter
                - text: '}'
              function: _smart_quote
            - text: )
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: ^
          - text: go
          - text: ' '
          - text: <
          - text: user.letter
          - text: '>'
          - text: $
          - text: ':'
        - doc:
            docs:
            - text: user.file_manager_open_volume
            - text: (
            - doc:
                docs:
                - text: /mnt/
                - text: '{'
                - text: letter
                - text: '}'
              function: _smart_quote
            - text: )
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - text: '

        '
    - alts:
      - docs:
        - text: (
        - text: wsl
        - text: ' '
        - text: '|'
        - text: ' '
        - text: weasel
        - text: )
        - text: ' '
        - text: reset
        - text: ' '
        - text: path
        - text: ' '
        - text: detection
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - text: user.wsl_reset_path_detection
            - text: (
            - text: )
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: (
          - text: wsl
          - text: ' '
          - text: '|'
          - text: ' '
          - text: weasel
          - text: )
          - text: ' '
          - text: reset
          - text: ' '
          - text: path
          - text: ' '
          - text: detection
          - text: ':'
        - doc:
            docs:
            - text: user.wsl_reset_path_detection
            - text: (
            - text: )
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - alts:
      - docs:
        - text: (
        - text: wsl
        - text: ' '
        - text: '|'
        - text: ' '
        - text: weasel
        - text: )
        - text: ' '
        - text: speak
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - text: user.wsl_speak
            - text: (
            - text: )
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: (
          - text: wsl
          - text: ' '
          - text: '|'
          - text: ' '
          - text: weasel
          - text: )
          - text: ' '
          - text: speak
          - text: ':'
        - doc:
            docs:
            - text: user.wsl_speak
            - text: (
            - text: )
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
  max_line_width: 1000
  renderer: smart
  simple_layout: null
output: |
  # NOTE: to use these commands you will need to activate the tag below in whatever contexts you
  # choose.
  #
  # do this in a separate .talon file or via python. for example, if you use windows terminal for
  # wsl then you might do this:
  #
  #    os: windows
  #    app: windows_terminal
  #    -
  #    tag(): user.wsl
  #
  # however, if you also use windows terminal for other things (powershell), you will want something
  # more specific...like this:
  #
  #    os: windows
  #    app: windows_terminal
  #    title: /^WSL:/
  #    -
  #    tag(): user.wsl
  #
  # then, you will need to find a way to set the window title accordingly. for example, to match
  # the title pattern above, you can set the prompt in your .bashrc file like this:
  #
  #    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}WSL:${WSL_DISTRO_NAME} \u@\h: \w\a\]$PS1"
  #
  # ALSO: if you do populate your window title with your distro name, make sure the 'wsl_title_regex'
  # value in wsl.py is set accordingly.
  tag: user.wsl
  -
  tag(): terminal
  tag(): user.file_manager
  tag(): user.generic_unix_shell
  tag(): user.git
  tag(): user.kubectl

  ^go <user.letter>$: user.file_manager_open_volume("/mnt/{letter}")

  (wsl | weasel) reset path detection: user.wsl_reset_path_detection()
  (wsl | weasel) speak: user.wsl_speak()
