input:
  doc:
    docs:
    - cells:
      - docs:
        - text: win.title
        - text: ':'
      - text: /repl/
      info:
        hpad:
          text: ' '
        hsep:
          text: ' '
        min_col_widths: []
        table_type: match
    - cells:
      - docs:
        - text: win.title
        - text: ':'
      - docs:
        - text: /Talon
        - text: ' '
        - text: '-'
        - text: ' '
        - text: REPL/
      info:
        hpad:
          text: ' '
        hsep:
          text: ' '
        min_col_widths: []
        table_type: match
    - text: '-'
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.talon_python
    - text: '

        '
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: uncomment
    - text: ' '
    - text: user.talon_populate_lists
    - text: ' '
    - text: tag
    - text: ' '
    - text: to
    - text: ' '
    - text: activate
    - text: ' '
    - text: talon-specific
    - text: ' '
    - text: lists
    - text: ' '
    - text: of
    - text: ' '
    - text: actions,
    - text: ' '
    - text: scopes,
    - text: ' '
    - text: modes
    - text: ' '
    - text: etcetera.
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: Do
    - text: ' '
    - text: not
    - text: ' '
    - text: enable
    - text: ' '
    - text: this
    - text: ' '
    - text: tag
    - text: ' '
    - text: with
    - text: ' '
    - text: dragon,
    - text: ' '
    - text: as
    - text: ' '
    - text: it
    - text: ' '
    - text: will
    - text: ' '
    - text: be
    - text: ' '
    - text: unusable.
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: with
    - text: ' '
    - text: conformer,
    - text: ' '
    - text: the
    - text: ' '
    - text: latency
    - text: ' '
    - text: increase
    - text: ' '
    - text: may
    - text: ' '
    - text: also
    - text: ' '
    - text: be
    - text: ' '
    - text: unacceptable
    - text: ' '
    - text: depending
    - text: ' '
    - text: 'on'
    - text: ' '
    - text: your
    - text: ' '
    - text: cpu
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: see
    - text: ' '
    - text: https://github.com/knausj85/knausj_talon/issues/600
    - text: '

        '
    - text: '#'
    - text: ' '
    - text: 'tag():'
    - text: ' '
    - text: user.talon_populate_lists
    - text: '

        '
    - text: '

        '
    - text: ^
    - text: test
    - text: ' '
    - text: last
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: phrase
        - text: ' '
        - text: '='
        - text: ' '
        - text: user.history_get
        - text: (
        - text: '1'
        - text: )
        - text: '

            '
        - text: command
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            docs:
            - text: sim('
            - text: '{'
            - text: phrase
            - text: '}'
            - text: ''')'
          function: _smart_quote
        - text: '

            '
        - text: insert
        - text: (
        - text: command
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: test
    - text: ' '
    - text: <
    - text: phrase
    - text: '>'
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            docs:
            - text: sim('
            - text: '{'
            - text: phrase
            - text: '}'
            - text: ''')'
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: test
    - text: ' '
    - text: numb
    - text: ' '
    - text: <
    - text: number_small
    - text: '>'
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: phrase
        - text: ' '
        - text: '='
        - text: ' '
        - text: user.history_get
        - text: (
        - text: number_small
        - text: )
        - text: '

            '
        - text: command
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            docs:
            - text: sim('
            - text: '{'
            - text: phrase
            - text: '}'
            - text: ''')'
          function: _smart_quote
        - text: '

            '
        - text: '#'
        - text: ' '
        - text: to
        - text: ' '
        - text: 'do:'
        - text: ' '
        - text: shouldn't
        - text: ' '
        - text: this
        - text: ' '
        - text: work?
        - text: '

            '
        - text: '#'
        - text: ' '
        - text: user.paste("sim({phrase})")
        - text: '

            '
        - text: insert
        - text: (
        - text: command
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: '#'
    - text: ' '
    - text: requires
    - text: ' '
    - text: user.talon_populate_lists
    - text: ' '
    - text: tag.
    - text: ' '
    - text: do
    - text: ' '
    - text: not
    - text: ' '
    - text: use
    - text: ' '
    - text: with
    - text: ' '
    - text: dragon
    - text: '

        '
    - text: ^
    - text: debug
    - text: ' '
    - text: action
    - text: ' '
    - text: '{'
    - text: user.talon_actions
    - text: '}'
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            docs:
            - text: actions.find('
            - text: '{'
            - text: user.talon_actions
            - text: '}'
            - text: ''')'
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: '#'
    - text: ' '
    - text: requires
    - text: ' '
    - text: user.talon_populate_lists
    - text: ' '
    - text: tag.
    - text: ' '
    - text: do
    - text: ' '
    - text: not
    - text: ' '
    - text: use
    - text: ' '
    - text: with
    - text: ' '
    - text: dragon
    - text: '

        '
    - text: ^
    - text: debug
    - text: ' '
    - text: list
    - text: ' '
    - text: '{'
    - text: user.talon_lists
    - text: '}'
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            docs:
            - text: actions.user.talon_pretty_print(registry.lists['
            - text: '{'
            - text: talon_lists
            - text: '}'
            - text: '''])'
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: debug
    - text: ' '
    - text: tags
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            text: actions.user.talon_pretty_print(registry.tags)
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: debug
    - text: ' '
    - text: settings
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            text: actions.user.talon_pretty_print(registry.settings)
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: debug
    - text: ' '
    - text: modes
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            text: actions.user.talon_pretty_print(scope.get('mode'))
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: '#'
    - text: ' '
    - text: requires
    - text: ' '
    - text: user.talon_populate_lists
    - text: ' '
    - text: tag.
    - text: ' '
    - text: do
    - text: ' '
    - text: not
    - text: ' '
    - text: use
    - text: ' '
    - text: with
    - text: ' '
    - text: dragon
    - text: '

        '
    - text: ^
    - text: debug
    - text: ' '
    - text: scope
    - text: ' '
    - text: '{'
    - text: user.talon_scopes
    - text: '}'
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            docs:
            - text: actions.user.talon_pretty_print(scope.get('
            - text: '{'
            - text: talon_scopes
            - text: '}'
            - text: '''))'
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: debug
    - text: ' '
    - text: running
    - text: ' '
    - text: apps
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            text: actions.user.talon_pretty_print(ui.apps(background=False))
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: debug
    - text: ' '
    - text: all
    - text: ' '
    - text: windows
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            text: actions.user.talon_pretty_print(ui.windows())
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
    - text: ^
    - text: debug
    - text: ' '
    - text: '{'
    - text: user.running
    - text: '}'
    - text: ' '
    - text: windows
    - text: $
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            docs:
            - text: actions.user.talon_debug_app_windows('
            - text: '{'
            - text: running
            - text: '}'
            - text: ''')'
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: key
        - text: (
        - text: enter
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
  max_line_width: null
  renderer: simple
  simple_layout: ShortestLines
output: |
  win.title: /repl/
  win.title: /Talon - REPL/
  -
  tag(): user.talon_python

  # uncomment user.talon_populate_lists tag to activate talon-specific lists of actions, scopes, modes etcetera.
  # Do not enable this tag with dragon, as it will be unusable.
  # with conformer, the latency increase may also be unacceptable depending on your cpu
  # see https://github.com/knausj85/knausj_talon/issues/600
  # tag(): user.talon_populate_lists

  ^test last$:
      phrase = user.history_get(1)
      command = "sim('{phrase}')"
      insert(command)
      key(enter)
  ^test <phrase>$:
      insert("sim('{phrase}')")
      key(enter)
  ^test numb <number_small>$:
      phrase = user.history_get(number_small)
      command = "sim('{phrase}')"
      # to do: shouldn't this work?
      # user.paste("sim({phrase})")
      insert(command)
      key(enter)
  # requires user.talon_populate_lists tag. do not use with dragon
  ^debug action {user.talon_actions}$:
      insert("actions.find('{user.talon_actions}')")
      key(enter)
  # requires user.talon_populate_lists tag. do not use with dragon
  ^debug list {user.talon_lists}$:
      insert("actions.user.talon_pretty_print(registry.lists['{talon_lists}'])")
      key(enter)
  ^debug tags$:
      insert("actions.user.talon_pretty_print(registry.tags)")
      key(enter)
  ^debug settings$:
      insert("actions.user.talon_pretty_print(registry.settings)")
      key(enter)
  ^debug modes$:
      insert("actions.user.talon_pretty_print(scope.get('mode'))")
      key(enter)
  # requires user.talon_populate_lists tag. do not use with dragon
  ^debug scope {user.talon_scopes}$:
      insert("actions.user.talon_pretty_print(scope.get('{talon_scopes}'))")
      key(enter)
  ^debug running apps$:
      insert("actions.user.talon_pretty_print(ui.apps(background=False))")
      key(enter)
  ^debug all windows$:
      insert("actions.user.talon_pretty_print(ui.windows())")
      key(enter)
  ^debug {user.running} windows$:
      insert("actions.user.talon_debug_app_windows('{running}')")
      key(enter)
