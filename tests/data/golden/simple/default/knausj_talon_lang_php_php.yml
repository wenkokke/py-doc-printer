input:
  doc:
    docs:
    - cells:
      - docs:
        - text: tag
        - text: ':'
      - text: user.php
      info:
        hpad:
          text: ' '
        hsep:
          text: ' '
        min_col_widths: []
        table_type: match
    - text: '-'
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_imperative
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_object_oriented
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_libraries
    - text: '

        '
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_comment_line
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_comment_block
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_comment_documentation
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_data_bool
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_data_null
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_operators_assignment
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_operators_math
    - text: '

        '
    - text: 'tag():'
    - text: ' '
    - text: user.code_functions
    - text: '

        '
    - text: '

        '
    - text: 'settings():'
    - doc:
        docs:
        - text: '

            '
        - text: user.code_private_function_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_protected_function_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_public_function_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_private_variable_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_protected_variable_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
        - text: user.code_public_variable_formatter
        - text: ' '
        - text: '='
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: '

            '
      indent: 4
      overlap: false
    - text: '

        '
    - alts:
      - docs:
        - text: (
        - text: op
        - text: ' '
        - text: '|'
        - text: ' '
        - text: is
        - text: )
        - text: ' '
        - text: loosely
        - text: ' '
        - text: equal
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: ' '
                - text: ==
                - text: ' '
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: (
          - text: op
          - text: ' '
          - text: '|'
          - text: ' '
          - text: is
          - text: )
          - text: ' '
          - text: loosely
          - text: ' '
          - text: equal
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: ' '
                - text: ==
                - text: ' '
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - alts:
      - docs:
        - text: (
        - text: op
        - text: ' '
        - text: '|'
        - text: ' '
        - text: is
        - text: )
        - text: ' '
        - text: loosely
        - text: ' '
        - text: not
        - text: ' '
        - text: equal
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: ' '
                - text: '!='
                - text: ' '
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: (
          - text: op
          - text: ' '
          - text: '|'
          - text: ' '
          - text: is
          - text: )
          - text: ' '
          - text: loosely
          - text: ' '
          - text: not
          - text: ' '
          - text: equal
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: ' '
                - text: '!='
                - text: ' '
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - text: '

        '
    - alts:
      - docs:
        - text: state
        - text: ' '
        - text: try
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: try
                - text: ' '
                - text: '{'
                - text: \n
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: state
          - text: ' '
          - text: try
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: try
                - text: ' '
                - text: '{'
                - text: \n
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - alts:
      - docs:
        - text: state
        - text: ' '
        - text: catch
        - text: ':'
        - doc:
            docs:
            - text: '

                '
            - doc:
                docs:
                - text: catch
                - text: ' '
                - text: (
                - text: \\
                - text: Throwable
                - text: ' '
                - text: $exception)
                - text: ' '
                - text: '{'
                - text: \n
              function: _smart_quote
            - text: '

                '
          indent: 4
          overlap: false
      - cells:
        - docs:
          - text: state
          - text: ' '
          - text: catch
          - text: ':'
        - doc:
            docs:
            - doc:
                docs:
                - text: catch
                - text: ' '
                - text: (
                - text: \\
                - text: Throwable
                - text: ' '
                - text: $exception)
                - text: ' '
                - text: '{'
                - text: \n
              function: _smart_quote
            - text: '

                '
          function: _inline
        info:
          hpad:
            text: ' '
          hsep:
            text: ' '
          min_col_widths: []
          table_type: command
    - text: '

        '
    - text: var
    - text: ' '
    - text: <
    - text: phrase
    - text: '>'
    - text: ' '
    - text: '['
    - text: over
    - text: ']'
    - text: ':'
    - doc:
        docs:
        - text: '

            '
        - text: insert
        - text: (
        - doc:
            text: $
          function: _smart_quote
        - text: )
        - text: '

            '
        - text: insert
        - text: (
        - text: user.formatted_text
        - text: (
        - text: phrase
        - text: ','
        - text: ' '
        - doc:
            text: PRIVATE_CAMEL_CASE
          function: _smart_quote
        - text: )
        - text: )
        - text: '

            '
      indent: 4
      overlap: false
  max_line_width: null
  renderer: simple
  simple_layout: ShortestLines
output: |
  tag: user.php
  -
  tag(): user.code_imperative
  tag(): user.code_object_oriented
  tag(): user.code_libraries

  tag(): user.code_comment_line
  tag(): user.code_comment_block
  tag(): user.code_comment_documentation
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_operators_assignment
  tag(): user.code_operators_math
  tag(): user.code_functions

  settings():
      user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"

  (op | is) loosely equal:
      " == "
  (op | is) loosely not equal:
      " != "

  state try:
      "try {\n"
  state catch:
      "catch (\\Throwable $exception) {\n"

  var <phrase> [over]:
      insert("$")
      insert(user.formatted_text(phrase, "PRIVATE_CAMEL_CASE"))
